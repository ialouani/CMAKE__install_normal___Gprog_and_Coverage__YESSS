1/git restore avant git add d'un file permet de revenir a la revision d'initiales.
2/git stash permet de sauver en enlevant les modifications locales depuis l'initiale apres un staged file ajouts en cours dans le distant.(git restore++)
3/git add submodule <url> pg106_coverage premet de prendre en compte dans github un pointeur vers un sous-dept ayant le meme .git mais pas dans l'ensemble des repertoires.(problemes de synchronisations) apres git add <repository___2>.
4/git init puis pas de git push a l'instant..
5/git add -i en interactive jusqu'a staged apres added 11 paths par exemples avec unsatged files c'est a dire necessite des commandes d'acces internet pour distant prise en compte...
6/c'est tout.
7/entrainement sur Gprog et --coverage surtout.






a-Code Coverage:
on compile en .o avec les options -fprofile-arcs -ftest-coverage PUIS on edite les liens avec la librarie dynamiques en utilisant la commande: gcc *.o -o hash_uint -lgcov qui permet de prendre en compte les symboles tires des diverses fonctions de la librairie dynamiqye gcov.
Puis on regarde bien que des fichiers .o ont ete bien crees ainsi que des fichiers .gcno ; c'est seul l'execution (commande ci-dessus) qui permet de retrouver la trace cad. la couverture c'est a dire la generation de fichiers: .c.gcov en .gcda via l'execution  de la commande gcov hash_unit_example.gcda => affiche combien de lignes lors de l'execution totale ainsi dans un profil html le nombre de fois le programme y ait passÃ©.
=>eviter le raptriement des diverses sources
=>ajout classiquement d'un repertoir coverage
=>dans celui-la: Un cmakeLists.txt dans lequel on ecrit
(set(CMAKE_C_FLAGS_COVERAGE "-g -O0 -fprofile-arcs -ftest-coverage)
apres: message(STATUS "cmake build type is set to ${CMAKE_BUILD_TYPE}))
if(CMAKE_BUILD_TYPE STREQUAL Coverage)
	message("add coverage custom command")
	add_custom_target(coverage lcov -c -d .. -o coverage.info
		COMMAND genhtml coverage.info	
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
endif()
=>make && make test && make coverage permet de retrouver via firefox coverage/index.html ce qu'on veut.(apres un cd build2 et un cmake -DCMAKE_BUILD_TYPE=Coverage ..)




b-Code Profiling:
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
